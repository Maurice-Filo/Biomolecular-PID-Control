%% Clear Workspace
close all;
clear;
clc;
Save_Flag = 0;

%% Fixed Parameters
mu = 100;
theta = 5;
gamma_1 = 5;
gamma_2 = 0.1;
k_1 = 2;
r = mu / theta;
n = 1;
eta = 100;
k_vector = [0.1, 0.3, 0.8];
rho_vector = k_vector * k_1 * theta / (gamma_1 * gamma_2 * (gamma_1 + gamma_2));

%% Ranges of alpha and kappa
kappa_min = 1e-2;
kappa_max = 1000;
alpha_min = 1e-2;
alpha_max = 1e6;
kappa_vector = linspace(kappa_min, kappa_max, 1000);

%% Bounds
alpha_High = (gamma_1 * gamma_2 / k_1) * r * (1 + (r./kappa_vector).^n);
% Stable Standalone AIC
rho = rho_vector(1);
alpha_Low1 = gamma_1*gamma_2 * (rho - 1) * (kappa_vector/k_1) .* ((1 + (r./kappa_vector).^n).^2) ./ (n*(r./kappa_vector).^(n-1));
% Unstable Standalone AIC But not too unstable
rho = rho_vector(2);
alpha_Low2 = gamma_1*gamma_2 * (rho - 1) * (kappa_vector/k_1) .* ((1 + (r./kappa_vector).^n).^2) ./ (n*(r./kappa_vector).^(n-1));
kappa_0 = r * ((n+1-rho)/(rho-1))^(1/n);
kappa_Threshold = linspace(kappa_min, kappa_0, 1000);
alpha_Low_Threshold = gamma_1*gamma_2 * (rho - 1) * (kappa_Threshold/k_1) .* ((1 + (r./kappa_Threshold).^n).^2) ./ (n*(r./kappa_Threshold).^(n-1));
alpha_High_Threshold = (gamma_1 * gamma_2 / k_1) * r * (1 + (r./kappa_Threshold).^n);
% Too Unstable Standalone AIC
rho = rho_vector(3);
alpha_Low3 = gamma_1*gamma_2 * (rho - 1) * (kappa_vector/k_1) .* ((1 + (r./kappa_vector).^n).^2) ./ (n*(r./kappa_vector).^(n-1));

%% Figure Settings
Colors = lines(10);
MyBlue = Colors(1,:); MyRed = Colors(2,:); MyGreen = Colors(5,:);
SS = 4; % Screen Scale
Transparency = 0.3;
Figure_Width = 4 * SS;
Figure_Height = 3.5 * SS;
FontSize = 5 * SS;
FontSize_Small = 4 * SS;
LineWidth_Thin = 0.3 * SS;
LineWidth = 0.5 * SS;
LineWidth_Thick = 1 * SS;
MarkerSize = 5 * SS;

%% Set Figure 1
Figure1_Name = 'Stability_APIF1_Additive1';
Handle_Figure1 = figure();
    Handle_Figure1.PaperUnits = 'centimeters';
    Handle_Figure1.Units = 'centimeters';
    Handle_Figure1.Position = [5, 20, Figure_Width, Figure_Height];
    Handle_Figure1.PaperPositionMode = 'auto';
    Handle_Figure1.PaperSize = [Handle_Figure1.PaperPosition(3), Handle_Figure1.PaperPosition(4)];

Figure2_Name = 'Stability_APIF1_Additive2';
Handle_Figure2 = figure();
    Handle_Figure2.PaperUnits = 'centimeters';
    Handle_Figure2.Units = 'centimeters';
    Handle_Figure2.Position = [5, 20, Figure_Width, Figure_Height];
    Handle_Figure2.PaperPositionMode = 'auto';
    Handle_Figure2.PaperSize = [Handle_Figure1.PaperPosition(3), Handle_Figure1.PaperPosition(4)];
    
Figure3_Name = 'Stability_APIF1_Additive3';
Handle_Figure3 = figure();
    Handle_Figure3.PaperUnits = 'centimeters';
    Handle_Figure3.Units = 'centimeters';
    Handle_Figure3.Position = [5, 20, Figure_Width, Figure_Height];
    Handle_Figure3.PaperPositionMode = 'auto';
    Handle_Figure3.PaperSize = [Handle_Figure1.PaperPosition(3), Handle_Figure1.PaperPosition(4)];
    
%% Plotting the Results
Handle_Axis1 = axes(Handle_Figure1);
    Handle_Axis1.Box = 'on';
    Handle_Axis1.FontSize = FontSize;
    hold(Handle_Axis1, 'on');
    grid(Handle_Axis1, 'off');
    Handle_Axis1.XMinorGrid = 'off';
    Handle_Axis1.YMinorGrid = 'off';
    Handle_Axis1.XLabel.String = '$\kappa$';
    Handle_Axis1.YLabel.String = '$\alpha$';
    Handle_Axis1.XLabel.Interpreter = 'latex';
    Handle_Axis1.YLabel.Interpreter = 'latex';
    Handle_Axis1.XScale = 'log';
    Handle_Axis1.YScale = 'log';
    Handle_Axis1.XLim = [0, kappa_vector(end)];
    Handle_Axis1.YLim = [alpha_min, alpha_max];
    Handle_Axis1.Title.String = '$\rho < 1$';
    Handle_Axis1.Title.Interpreter = 'latex';
    Handle_Axis1.XTickLabel = [];
    Handle_Axis1.YTickLabel = [];
kappa_TwoDirections = [kappa_vector, fliplr(kappa_vector)];
inBetween1 = [0*alpha_Low1+alpha_min, fliplr(alpha_High)];
Handle = fill(Handle_Axis1, kappa_TwoDirections, inBetween1, MyBlue);
Handle.FaceAlpha = Transparency;
inBetween2 = [0*alpha_Low1+alpha_max, fliplr(alpha_High)];
Handle = fill(Handle_Axis1, kappa_TwoDirections, inBetween2, MyRed);
Handle.FaceAlpha = Transparency;
plot(Handle_Axis1, kappa_vector, alpha_Low1, 'LineWidth', LineWidth, 'Color', 'k');
plot(Handle_Axis1, kappa_vector, alpha_High, 'LineWidth', LineWidth, 'Color', 'k');
Handle_Annotation = annotation(Handle_Figure1, 'textbox');
    Handle_Annotation.String = 'Stable';
    Handle_Annotation.EdgeColor = 'none';
    Handle_Annotation.FontName = 'Helvetica';
    Handle_Annotation.FontSize = FontSize/1.2;
    Handle_Annotation.Position = [0.77 0.39 0 0];
    Handle_Annotation.Color = MyBlue;
Handle_Annotation = annotation(Handle_Figure1, 'textbox');
    Handle_Annotation.String = 'Unstable';
    Handle_Annotation.EdgeColor = 'none';
    Handle_Annotation.FontName = 'Helvetica';
    Handle_Annotation.FontSize = FontSize/1.2;
    Handle_Annotation.Position = [0.73 0.45 0 0];
    Handle_Annotation.Color = MyRed;

Handle_Axis2 = axes(Handle_Figure2);
    Handle_Axis2.Box = 'on';
    Handle_Axis2.FontSize = FontSize;
    hold(Handle_Axis2, 'on');
    grid(Handle_Axis2, 'off');
    Handle_Axis2.XMinorGrid = 'off';
    Handle_Axis2.YMinorGrid = 'off';
    Handle_Axis2.XLabel.String = '$\kappa$';
    Handle_Axis2.YLabel.String = '$\alpha$';
    Handle_Axis2.XLabel.Interpreter = 'latex';
    Handle_Axis2.YLabel.Interpreter = 'latex';
    Handle_Axis2.XLim = [0, kappa_vector(end)];
    Handle_Axis2.XScale = 'log';
    Handle_Axis2.YScale = 'log';
    Handle_Axis2.YLim = [alpha_min, alpha_max];
    Handle_Axis2.Title.String = '$1 < \rho < 2$';
    Handle_Axis2.Title.Interpreter = 'latex';
    Handle_Axis2.XTickLabel = [];
    Handle_Axis2.YTickLabel = [];
kappa_TwoDirections1 = [kappa_Threshold, fliplr(kappa_Threshold)];
inBetween1 = [alpha_min + 0*kappa_Threshold, fliplr(alpha_Low_Threshold)];
Handle = fill(Handle_Axis2, kappa_TwoDirections1, inBetween1, MyRed);
Handle.FaceAlpha = Transparency;
Handle.EdgeColor = 'none';
kappa_TwoDirections2 = [kappa_Threshold, fliplr(kappa_Threshold)];
inBetween2 = [alpha_Low_Threshold, fliplr(alpha_High_Threshold)];
Handle = fill(Handle_Axis2, kappa_TwoDirections2, inBetween2, MyBlue);
Handle.FaceAlpha = Transparency;
Handle.EdgeColor = 'none';
inBetween3 = [alpha_max + 0*kappa_Threshold, fliplr(alpha_High_Threshold)];
Handle = fill(Handle_Axis2, kappa_TwoDirections1, inBetween3, MyRed);
Handle.FaceAlpha = Transparency;
Handle.EdgeColor = 'none';
Handle = fill(Handle_Axis2, [kappa_0, kappa_max, kappa_max, kappa_0], [alpha_min, alpha_min, alpha_max, alpha_max], MyRed);
Handle.EdgeColor = 'none';
Handle.FaceAlpha = Transparency;
plot(Handle_Axis2, kappa_vector, alpha_Low2, 'LineWidth', LineWidth, 'Color', 'k');
plot(Handle_Axis2, kappa_vector, alpha_High, 'LineWidth', LineWidth, 'Color', 'k');
Handle_Scatter = scatter(Handle_Axis2, kappa_Threshold(end), alpha_Low_Threshold(end));
    Handle_Scatter.MarkerFaceColor = 0*[1 1 1];
    Handle_Scatter.MarkerEdgeColor = 0*[1 1 1];
    Handle_Scatter.SizeData = 100;
Handle_Annotation = annotation(Handle_Figure2, 'textbox');
    Handle_Annotation.Interpreter = 'latex';
    Handle_Annotation.String = '$\left(r\sqrt[n]{\frac{n+1-\rho}{\rho-1}}, \frac{\gamma_1 \gamma_2}{k_1(n+1-\rho)} r \right)$';
    Handle_Annotation.EdgeColor = 'none';
    Handle_Annotation.FontName = 'Times New Roman';
    Handle_Annotation.FontSize = FontSize/1.2;
    Handle_Annotation.Position = [0.52 0.36 0 0];
    Handle_Annotation.Color = 0*[1 1 1];
Handle_Annotation = annotation(Handle_Figure2, 'textarrow','HeadStyle','none', 'LineStyle', 'none', 'TextRotation', -27);
    Handle_Annotation.String = 'Stable';
    Handle_Annotation.FontName = 'Helvetica';
    Handle_Annotation.FontSize = FontSize/1.2;
    Handle_Annotation.Position = [0.28 0.59 0 0];
    Handle_Annotation.Color = MyBlue;
Handle_Annotation = annotation(Handle_Figure2, 'textarrow','HeadStyle','none', 'LineStyle', 'none', 'TextRotation', -29);
    Handle_Annotation.String = 'Unstable';
    Handle_Annotation.FontName = 'Helvetica';
    Handle_Annotation.FontSize = FontSize/1.2;
    Handle_Annotation.Position = [0.31 0.65 0 0];
    Handle_Annotation.Color = MyRed;
Handle_Annotation = annotation(Handle_Figure2, 'textarrow','HeadStyle','none', 'LineStyle', 'none', 'TextRotation', -27);
    Handle_Annotation.String = 'Oscillations';
    Handle_Annotation.FontName = 'Helvetica';
    Handle_Annotation.FontSize = FontSize/1.2;
    Handle_Annotation.Position = [0.33 0.48 0 0];
    Handle_Annotation.Color = MyRed;
    
Handle_Axis3 = axes(Handle_Figure3);
    Handle_Axis3.Box = 'on';
    Handle_Axis3.FontSize = FontSize;
    hold(Handle_Axis3, 'on');
    grid(Handle_Axis3, 'off');
    Handle_Axis3.XMinorGrid = 'off';
    Handle_Axis3.YMinorGrid = 'off';
    Handle_Axis3.XLabel.String = '$\kappa$';
    Handle_Axis3.YLabel.String = '$\alpha$';
    Handle_Axis3.XLabel.Interpreter = 'latex';
    Handle_Axis3.YLabel.Interpreter = 'latex';
    Handle_Axis3.XScale = 'log';
    Handle_Axis3.YScale = 'log';
    Handle_Axis3.XLim = [0, kappa_vector(end)];
    Handle_Axis3.YLim = [alpha_min, alpha_max];
    Handle_Axis3.Title.String = '$\rho > 2$';
  	Handle_Axis3.Title.Interpreter = 'latex';
    Handle_Axis3.XTickLabel = [];
    Handle_Axis3.YTickLabel = [];
kappa_TwoDirections1 = [kappa_vector, fliplr(kappa_vector)];
inBetween1 = [alpha_min + 0*kappa_vector, alpha_max + 0*kappa_vector];
Handle = fill(Handle_Axis3, kappa_TwoDirections1, inBetween1, MyRed);
Handle.FaceAlpha = Transparency;
plot(Handle_Axis3, kappa_vector, alpha_Low3, 'LineWidth', LineWidth, 'Color', 'k');
plot(Handle_Axis3, kappa_vector, alpha_High, 'LineWidth', LineWidth, 'Color', 'k');

%% Simulation Settings
Solver = 'ODE23s';
tf = 100;
IC = zeros(4,1);
N = 1000;

%% Simulation Stable (rho < 1)
alpha = 50;
kappa = 1;
k = k_vector(1);
plot(Handle_Axis1, kappa, alpha, 'Marker', 'o', 'MarkerSize', 10, 'Color', MyBlue, 'MarkerFaceColor', MyBlue);
Parameters.k = k;
Parameters.alpha = alpha;
Parameters.kappa = kappa;
Parameters.k_1 = k_1;
Parameters.gamma_1 = gamma_1;
Parameters.gamma_2 = gamma_2;
Parameters.mu = mu;
Parameters.theta = theta;
Parameters.eta = eta;
Parameters.n = n;
Parameters.gamma_c = 0;
Parameters.beta = 0;
[~, x] = DSA(StoichiometryMatrix_APIDF_Additive_2LinearSpecies(), @PropensityFunction_APIDF_Additive_2LinearSpecies, Parameters, IC, tf, N, Solver);
Handle_Axis1_1 = axes(Handle_Figure1);
    hold(Handle_Axis1_1, 'on');
    Handle_Axis1_1.Position = [0.2, 0.22, 0.2, 0.2];
    Handle_Axis1_1.XScale = 'log';
    Handle_Axis1_1.YScale = 'log';
    Handle_Axis1_1.XLim = [0, 2*r];
    Handle_Axis1_1.YLim = [0, 2*max(x(4,:))];
    Handle_Axis1_1.XTick = r;
    Handle_Axis1_1.XTickLabel = '$r$';
    Handle_Axis1_1.TickLabelInterpreter = 'latex';
    Handle_Axis1_1.YTick = [];
    Handle_Axis1_1.Box = 'on';
    Handle_Axis1_1.FontSize = FontSize;
    grid(Handle_Axis1_1, 'off');
    Handle_Axis1_1.XMinorGrid = 'off';
    Handle_Axis1_1.YMinorGrid = 'off';
    Handle_Axis1_1.XLabel.String = '$x_2$';
    Handle_Axis1_1.YLabel.String = '$z_2$';
    Handle_Axis1_1.XLabel.Interpreter = 'latex';
    Handle_Axis1_1.YLabel.Interpreter = 'latex';
plot(Handle_Axis1_1, x(2,:), x(4,:), 'LineWidth', LineWidth, 'Color', MyBlue);
plot(Handle_Axis1, [1, 0.54], [50, 11], 'LineWidth', LineWidth, 'LineStyle', ':', 'Color', MyBlue);
plot(Handle_Axis1, [1, 2.68e-2], [50, 11], 'LineWidth', LineWidth, 'LineStyle', ':', 'Color', MyBlue);

%% Simulation Unstable (rho < 1)
alpha = 300;
kappa = 1;
k = k_vector(1);
plot(Handle_Axis1, kappa, alpha, 'Marker', 'o', 'MarkerSize', 10, 'Color', MyRed, 'MarkerFaceColor', MyRed);
Parameters.k = k;
Parameters.alpha = alpha;
Parameters.kappa = kappa;
Parameters.k_1 = k_1;
Parameters.gamma_1 = gamma_1;
Parameters.gamma_2 = gamma_2;
Parameters.mu = mu;
Parameters.theta = theta;
Parameters.eta = eta;
Parameters.n = n;
Parameters.gamma_c = 0;
Parameters.beta = 0;
[~, x] = DSA(StoichiometryMatrix_APIDF_Additive_2LinearSpecies(), @PropensityFunction_APIDF_Additive_2LinearSpecies, Parameters, IC, tf, N, Solver);
Handle_Axis1_2 = axes(Handle_Figure1);
    Handle_Axis1_2.Position = [0.6, 0.6, 0.2, 0.2];
    Handle_Axis1_2.XLim = [0, 2*r];
    Handle_Axis1_2.YLim = [0, 1*max(x(4,:))];
    Handle_Axis1_2.XScale = 'log';
    Handle_Axis1_2.YScale = 'log';
    Handle_Axis1_2.XTick = r;
    Handle_Axis1_2.XTickLabel = '$r$';
    Handle_Axis1_2.TickLabelInterpreter = 'latex';
    Handle_Axis1_2.YTick = [];
    Handle_Axis1_2.Box = 'on';
    Handle_Axis1_2.FontSize = FontSize;
    hold(Handle_Axis1_2, 'on');
    grid(Handle_Axis1_2, 'off');
    Handle_Axis1_2.XMinorGrid = 'off';
    Handle_Axis1_2.YMinorGrid = 'off';
    Handle_Axis1_2.XLabel.String = '$x_2$';
    Handle_Axis1_2.YLabel.String = '$z_2$';
    Handle_Axis1_2.XLabel.Interpreter = 'latex';
    Handle_Axis1_2.YLabel.Interpreter = 'latex';
plot(Handle_Axis1_2, x(2,:), x(4,:), 'LineWidth', LineWidth, 'Color', MyRed);
plot(Handle_Axis1_2, r*[1, 1], Handle_Axis1_2.YLim + 1e-2, 'LineWidth', LineWidth_Thin, 'Color', 'k', 'LineStyle', '--');
plot(Handle_Axis1, [1, 11], [300, 6e4], 'LineWidth', LineWidth, 'LineStyle', ':', 'Color', MyRed);
plot(Handle_Axis1, [1, 11], [300, 750], 'LineWidth', LineWidth, 'LineStyle', ':', 'Color', MyRed);

%% Simulation Stable (1 < rho < 2)
alpha = 65;
kappa = 1;
k = k_vector(2);
plot(Handle_Axis2, kappa, alpha, 'Marker', 'o', 'MarkerSize', 10, 'Color', MyBlue, 'MarkerFaceColor', MyBlue);
Parameters.k = k;
Parameters.alpha = alpha;
Parameters.kappa = kappa;
Parameters.k_1 = k_1;
Parameters.gamma_1 = gamma_1;
Parameters.gamma_2 = gamma_2;
Parameters.mu = mu;
Parameters.theta = theta;
Parameters.eta = eta;
Parameters.n = n;
Parameters.gamma_c = 0;
Parameters.beta = 0;
tf = 200;
[~, x] = DSA(StoichiometryMatrix_APIDF_Additive_2LinearSpecies(), @PropensityFunction_APIDF_Additive_2LinearSpecies, Parameters, IC, tf, N, Solver);
Handle_Axis2_1 = axes(Handle_Figure2);
    Handle_Axis2_1.Position = [0.7, 0.55, 0.2, 0.2];
    Handle_Axis2_1.XLim = [0, 2*r];
    Handle_Axis2_1.YLim = [0, 1*max(x(4,:))];
    Handle_Axis2_1.XScale = 'log';
    Handle_Axis2_1.YScale = 'log';
    Handle_Axis2_1.XTick = r;
    Handle_Axis2_1.XTickLabel = '$r$';
    Handle_Axis2_1.TickLabelInterpreter = 'latex';
    Handle_Axis2_1.YTick = [];
    Handle_Axis2_1.Box = 'on';
    Handle_Axis2_1.FontSize = FontSize;
    hold(Handle_Axis2_1, 'on');
    grid(Handle_Axis2_1, 'off');
    Handle_Axis2_1.XMinorGrid = 'off';
    Handle_Axis2_1.YMinorGrid = 'off';
    Handle_Axis2_1.XLabel.String = '$x_2$';
    Handle_Axis2_1.YLabel.String = '$z_2$';
    Handle_Axis2_1.XLabel.Interpreter = 'latex';
    Handle_Axis2_1.YLabel.Interpreter = 'latex';
plot(Handle_Axis2_1, x(2,:), x(4,:), 'LineWidth', LineWidth/2, 'Color', MyBlue);
plot(Handle_Axis2, [kappa, 45], [alpha, 1.55e4], 'LineWidth', LineWidth, 'LineStyle', ':', 'Color', MyBlue);
plot(Handle_Axis2, [kappa, 45], [alpha, 200], 'LineWidth', LineWidth, 'LineStyle', ':', 'Color', MyBlue);

%% Simulation Unstable (1 < rho < 2)
alpha = 300;
kappa = 1;
k = k_vector(2);
plot(Handle_Axis2, kappa, alpha, 'Marker', 'o', 'MarkerSize', 10, 'Color', MyBlue, 'MarkerFaceColor', MyRed);
Parameters.k = k;
Parameters.alpha = alpha;
Parameters.kappa = kappa;
Parameters.k_1 = k_1;
Parameters.gamma_1 = gamma_1;
Parameters.gamma_2 = gamma_2;
Parameters.mu = mu;
Parameters.theta = theta;
Parameters.eta = eta;
Parameters.n = n;
Parameters.gamma_c = 0;
Parameters.beta = 0;
tf = 200;
[~, x] = DSA(StoichiometryMatrix_APIDF_Additive_2LinearSpecies(), @PropensityFunction_APIDF_Additive_2LinearSpecies, Parameters, IC, tf, N, Solver);
Handle_Axis2_2 = axes(Handle_Figure2);
    Handle_Axis2_2.Position = [0.35, 0.7, 0.2, 0.2];
    Handle_Axis2_2.XLim = [0, 1.8*r];
    Handle_Axis2_2.YLim = [0, 1*max(x(4,:))];
    Handle_Axis2_2.XScale = 'log';
    Handle_Axis2_2.YScale = 'log';
    Handle_Axis2_2.XTick = r;
    Handle_Axis2_2.XTickLabel = '$r$';
    Handle_Axis2_2.TickLabelInterpreter = 'latex';
    Handle_Axis2_2.YTick = [];
    Handle_Axis2_2.Box = 'on';
    Handle_Axis2_2.FontSize = FontSize;
    hold(Handle_Axis2_2, 'on');
    grid(Handle_Axis2_2, 'off');
    Handle_Axis2_2.XMinorGrid = 'off';
    Handle_Axis2_2.YMinorGrid = 'off';
    Handle_Axis2_2.XLabel.String = '$x_2$';
    Handle_Axis2_2.YLabel.String = '$z_2$';
    Handle_Axis2_2.XLabel.Interpreter = 'latex';
    Handle_Axis2_2.YLabel.Interpreter = 'latex';
plot(Handle_Axis2_2, x(2,:), x(4,:), 'LineWidth', LineWidth, 'Color', MyRed);
plot(Handle_Axis2_2, r*[1, 1], Handle_Axis2_2.YLim + 1e-2, 'LineWidth', LineWidth_Thin, 'Color', 'k', 'LineStyle', '--');
plot(Handle_Axis2, [kappa, 5], [alpha, 6000], 'LineWidth', LineWidth, 'LineStyle', ':', 'Color', MyRed);
plot(Handle_Axis2, [kappa, 0.3], [alpha, 6000], 'LineWidth', LineWidth, 'LineStyle', ':', 'Color', MyRed);

%% Simulation Unstable (Oscillations) (1 < rho < 2)
alpha = 5;
kappa = 1;
k = k_vector(2);
plot(Handle_Axis2, kappa, alpha, 'Marker', 'o', 'MarkerSize', 10, 'Color', MyBlue, 'MarkerFaceColor', MyRed);
Parameters.k = k;
Parameters.alpha = alpha;
Parameters.kappa = kappa;
Parameters.k_1 = k_1;
Parameters.gamma_1 = gamma_1;
Parameters.gamma_2 = gamma_2;
Parameters.mu = mu;
Parameters.theta = theta;
Parameters.eta = eta;
Parameters.n = n;
Parameters.gamma_c = 0;
Parameters.beta = 0;
tf = 100;
[~, x] = DSA(StoichiometryMatrix_APIDF_Additive_2LinearSpecies(), @PropensityFunction_APIDF_Additive_2LinearSpecies, Parameters, IC, tf, N, Solver);
Handle_Axis2_3 = axes(Handle_Figure2);
    Handle_Axis2_3.Position = [0.175, 0.195, 0.2, 0.2];
    Handle_Axis2_3.XLim = [0, 3*r];
    Handle_Axis2_3.YLim = [0, 1*max(x(4,:))];
    Handle_Axis2_3.XScale = 'log';
    Handle_Axis2_3.YScale = 'log';
    Handle_Axis2_3.XTick = r;
    Handle_Axis2_3.XTickLabel = '$r$';
    Handle_Axis2_3.TickLabelInterpreter = 'latex';
    Handle_Axis2_3.YTick = [];
    Handle_Axis2_3.Box = 'on';
    Handle_Axis2_3.FontSize = FontSize;
    hold(Handle_Axis2_3, 'on');
    grid(Handle_Axis2_3, 'off');
    Handle_Axis2_3.XMinorGrid = 'off';
    Handle_Axis2_3.YMinorGrid = 'off';
    Handle_Axis2_3.XLabel.String = '$x_2$';
    Handle_Axis2_3.YLabel.String = '$z_2$';
    Handle_Axis2_3.XLabel.Interpreter = 'latex';
    Handle_Axis2_3.YLabel.Interpreter = 'latex';
plot(Handle_Axis2_3, x(2,:), x(4,:), 'LineWidth', LineWidth/2, 'Color', MyRed);
plot(Handle_Axis2, [kappa, 4e-1], [alpha, 7], 'LineWidth', LineWidth, 'LineStyle', ':', 'Color', MyRed);
plot(Handle_Axis2, [kappa, 4e-1], [alpha, 0.055], 'LineWidth', LineWidth, 'LineStyle', ':', 'Color', MyRed);

%% Axis Labels Position
Handle_Axis1.YLabel.Position(1) = 0.003;
Handle_Axis1.XLabel.Position(2) = 0.005;
Handle_Axis2.YLabel.Position(1) = 0.003;
Handle_Axis2.XLabel.Position(2) = 0.005;
Handle_Axis1_1.XLabel.Position(2) = 5e-3;
Handle_Axis1_1.YLabel.Position(1) = 4.5e-1;
Handle_Axis1_2.XLabel.Position(2) = 3e-2;
Handle_Axis1_2.YLabel.Position(1) = 2;
Handle_Axis2_1.XLabel.Position(2) = 5e-3;
Handle_Axis2_1.YLabel.Position(1) = 1.5;
Handle_Axis2_2.XLabel.Position(2) = 4e-2;
Handle_Axis2_2.YLabel.Position(1) = 5;
Handle_Axis2_3.XLabel.Position(2) = 7e-4;
Handle_Axis2_3.YLabel.Position(1) = 6e-2;

%% Saving Figures
if Save_Flag == 1  
    Handle_Figure1.Color = 'none';
    set(Handle_Figure1, 'InvertHardCopy', 'off'); 
    print(Handle_Figure1, Figure1_Name,'-dpdf');
    
    Handle_Figure2.Color = 'none';
    set(Handle_Figure2, 'InvertHardCopy', 'off');
    print(Handle_Figure2, Figure2_Name,'-dpdf');
    
    Handle_Figure3.Color = 'none';
    set(Handle_Figure3, 'InvertHardCopy', 'off');
    print(Handle_Figure3, Figure3_Name,'-dpdf');
end
